 CXF（Apache）内置了一个jetty的web服务器
 
 CXF开发webService服务器端
/**
每个Web service 组件需要两个部分，接口和实现类
**/
 	1、开发一个Web service 业务接口
 		该接口用@WebService 修饰
 	2、开发一个Web service实现类
 		也需要用@WebService 修饰
 	3、发布Web Service
 		
 		
CXF开发webService客户端
	1、调用CXF提供的wsdl2java
		D:\workspace\WS_client>cd src
		wsdl2java http://127.0.0.1/cxfTest?wsdl
		任何语言实现了 Web service 都需要提供、暴露 WSDL 文档
	2、找到wsdl2java所生成类中，一个继承了service的类
		该类的实例可当成工厂的实例
	3、调用service子类getxxxport方法，返回远程Web service代理
	
	
行参、返回值
1、当形参、返回值类型是String 、基本数据类型时，CXF肯定可以轻松的处理

2、当形参、返回值类型是javaBean式复合类、list集合、数组等时
	CXF也可以很好呃处理
3、还有一些像Map、非JavaBean式的复合类，CXF是处理不了的。

/**************************
xml里的两个属性
targetNamespace : 相当于Java里的 package
xmln			 ：相当于java语言里的import


***************************/

Web Service 的三个技术基础
	1.WSDL Web Service Definition Language - Web Service定义语言
	2.SOAP simple object Access Protocol 简单对象访问协议
	3.UDDI



一次 web service调用  其实并不是方法调用，而是发送soap消息（即XML文档片段）

对于sayHi操作来说：
	传入消息是：
	<sayHi>
		<arg0>字符串</arg0>
	</sayHi>

	传出消息是：
	<sayHiResponse>
		<return>字符串</return>
	</sayHiResponse>



对于getCatsByUser操作来说
	传入消息是：
	<getCatsByUser>
		<arg0>
			<address>字符串</address>
			<id>整数值</id>
			<name>字符串</name>
			<pass>字符串</pass>
		</arg0>
	</getCatsByUser>

	传出消息：
	<getCatsByUserResponse>
		<return>	可出现0-n次    一个return对应一个cat对象
			<color>字符串</color>
			<id>整数值</id>
			<name>字符串</name>
		</return>
	</getCatsByUserResponse>

对于getAllCats操作来说
传入参数：
	<getAllCats>
	</getAllCats>
传出参数：
	<getAllCatsResponse>
		<return>
			<entries> ------可以出现0 - N 次
				<key>字符串</key>
				<value>
					<color></color>
					<id></id>
					<name></name>
				</value>
			</entries>
		</return>
	</getAllCatsResponse>












通俗的说，WSDL文档描述了Web Service如下3个方面
    --what	:该Web Service包含“什么”操作.
    --how	:该Web Service的操作应该“怎样”调用?
	--where	:该Web Service的服务地址
/************************
只要得到 Web Service的WSDL文档,
接下来程序就可以调用 Web Service
************************/

调用一次web service的本质
1.客户端把调用方法参数，转换成XML文档片段(SOAP消息) ---该文档片段必须符合WSDL定义的格式
2.通过网络把XML文档片段从传给服务器
3.服务器接收到XML文档片段
4.服务器解析XML文档片段,提取期中的数据.
        并把数据转换调用 Web Service所需要的参数值
5.服务器执行方法
6.把执行方法得到的返回值、再次转换生成XML文档片段(SOAP消息)
   ---该文档片段必须符合WSDL定义的格式
7.通过网络把XML文档片段从传给客户端
8.客户端接收到XML文档片段
9.客户端解析XML文档片段,提取期中的数据.
        并把数据转换调用 Web Service的返回值.

从上面的调用本质来看，要一个语言支持Web Service
唯一的要求是：该语言支持XML文档解析、生成、支持网络传输


在CXF开发中、如果遇到系统无法自动处理的类型就需要程序员自行处理 
处理思路是：提供一个转换器，该转换器负责把CXF搞不定的类型，转换CXF搞得定的类型
1、使用@XmlJavaTypeAdapter 修改CXF无法处理的类型
	使用该Annoatation时，通过value属性指定一个转换器
2、实现自己的转换器
	实现转换器时，需要开发一个CXF搞得定的类型
